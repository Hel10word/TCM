<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.boraydata.cdc</groupId>
    <artifactId>TableCloneManage</artifactId>
    <version>1.1</version>
    <description>Clone table struct and sync table data,Only good at offline table data.</description>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <descriptorRefs>
<!--                        使用的描述符，按此描述进行打包，此处配置一个zip.xml表示打zip包,如果写 jar-with-dependencies 表示 默认配置文件-->
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
<!--                    输出最终的名称-->
                    <finalName>TCM</finalName>
<!--                    配置是否添加id到名称中，若为true，当前示例中，则为jsw-test-zip.zip，false即不添加，只是jsw-test.zip； -->
<!--                     若同时打多个包，则可设为true，分别添加id以作区分-->
<!--                    <appendAssemblyId>true</appendAssemblyId>-->
<!--                     打包的输出目录，可自定义，${project.build.directory}为编译输出目录，即target目录 -->
<!--                    <outputDirectory>${project.build.directory}</outputDirectory>-->
                    <archive>
<!--                        设置 jar 包指定的主类-->
                        <manifest>
                            <mainClass>com.boraydata.cdc.tcm.TcmLog</mainClass>
                        </manifest>
                    </archive>
<!--                    <descriptors>-->
<!--                        &lt;!&ndash; 使用的描述符，按此描述进行打包，此处配置一个zip.xml表示打zip包 &ndash;&gt;-->
<!--                        <descriptor>src/main/assembly/assembly-with-TCM.xml</descriptor>-->
<!--                    </descriptors>-->
                </configuration>
                <executions>
                    <execution>
<!--                        id 标识,唯一即可-->
                        <id>make-assembly</id>
<!--                        设置 package 阶段进行-->
                        <phase>package</phase>
                        <goals>
<!--                            只运行一次-->
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <target>1.8</target>
                    <source>1.8</source>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${project.build.directory}/lib
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>cdc-libs/</classpathPrefix>
                            <mainClass>com.boraydata.cdc.tcm.TableCloneManageLauncher</mainClass>
                        </manifest>
                    </archive>
                    <includes>
                        <include>**/*.class</include>
                        <include>log4j.properties</include>
                    </includes>
                    <excludes>
<!--                        <exclude>config.properties</exclude>-->
<!--                        <exclude>*.back</exclude>-->
                    </excludes>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <properties>
        <hive-jdbc-standalone.version>1.0</hive-jdbc-standalone.version>
        <mysql-connector-java.version>8.0.28</mysql-connector-java.version>
        <postgresql.version>42.3.1</postgresql.version>

        <jackson.version>2.13.3</jackson.version>

        <org.slf4j.slf4j.log4j12.version>1.7.30</org.slf4j.slf4j.log4j12.version>
    </properties>

    <dependencies>

        <!--    hive-jdbc    -->
        <dependency>
            <groupId>com.boraydata</groupId>
            <artifactId>hive-jdbc-standalone</artifactId>
            <version>${hive-jdbc-standalone.version}</version>
<!--            <exclusions>-->
<!--                <exclusion>-->
<!--                    <groupId>org.slf4j</groupId>-->
<!--                    <artifactId>slf4j-log4j12</artifactId>-->
<!--                </exclusion>-->
<!--            </exclusions>-->
        </dependency>
        <!--    MySQL    -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-connector-java.version}</version>
        </dependency>

        <!--    PostGreSQL 13   -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
        </dependency>


        <!--    JSON    -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>


        <!--   Log4j2     -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${org.slf4j.slf4j.log4j12.version}</version>
        </dependency>

        <!--    Test    -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.7.2</version>
            <scope>test</scope>
            <optional>true</optional>
        </dependency>
    </dependencies>
</project>