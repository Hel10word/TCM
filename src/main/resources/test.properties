
# postgresql
sourceDatabaseName=test_db
sourceDataType=postgresql
sourceHost=192.168.30.31
sourcePort=5432
sourceUser=root
sourcePassword=root
sourceTable=lineitem_sf10


# source 端数据源信息填写示例
cloneDatabaseName=test_db
cloneDataType=postgresql
cloneHost=192.168.30.31
clonePort=5432
cloneUser=root
clonePassword=root
cloneTable=lineitem



# 默认为 ''，当使用 memsql 为 clone 端数据源时才可配置，使用其他数据源时请注释，以免报错，配置内容为 列名。
# memsqlColumnStore=l_orderkey


# # 使用工具 记录 source 端 表的 sql 语句，(默认为 falase)，sql 文件保存在 tempDirectory 目录下。
#getSourceTableSQL=true
# # 使用工具 记录 clone 端 表的 sql 语句，(默认为 falase)，sql 文件保存在 tempDirectory 目录下。
#getCloneTableSQL=true
# # 是否在 clone 端创建 clone table，(默认为 true)，若不创建 clone table，需要根据 cloneTable 指定一个存在的表。
createTableInClone=false
# # 是否执行 Export 数据的脚本，(默认为 true)
# executeExportScript=false
# # 是否执行 Import 数据的脚本，(默认为 true)
executeLoadScript=false
# # 导入导出过程中需要 CSV 文件名，(默认为 )
# # csvFileName=""



# 是否删除本地缓存 (默认为 'true')
deleteCache=false
# 当前任务生成临时文件的目录 (默认为 ‘./TCM-Temp’) ，临时文件包括 同步过程中导出的 表数据 CSV 文件，Clone 端建立同步表的 SQL 语句。
tempDirectory=./TCM-Temp-PgSQL
# CSV 文件每个字段的分隔符 (默认为 '|'')
delimiter=|
# 是否打印每一步的详细输出 (默认为 'false')
# debug=true
